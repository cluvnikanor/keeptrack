// interface Photo{
//     id: string,
//     thumbnailUrl: string,
//     title: string,
// }

// // const emptyPhoto: Photo={
// //     id:'',
// //     thumbnailUrl: '',
// //     title: '',
// // }
// let emptyPhoto: Photo[]

// const okUrl = 'http://localhost:3000/photos?_page=1&_limit=100';
// const notFoundErrorUrl = 'https://httpstat.us/404';
// const forbiddenErrorUrl = 'https://httpstat.us/403';
// const serverErrorUrl = 'https://httpstat.us/500';

// function PhotoList() {
//     const [loading, setLoading] = useState(false);
//     const [photos, setPhotos] = useState(emptyPhoto);
//     const [error, setError] = useState('');


//     function toUserError(error: Error) {
//         console.log('An error', error);
//         return 'ErRoR';
//     }

//     useEffect(() => {
//         setLoading(true);

//         fetch(okUrl)
//             .then((response) => {
//                 if (!response.ok) throw new Error(response.statusText);
//                 return response;
//             })
//             .then((response) => response.json())
//             .then((data) => {
//                 setError('');
//                 setPhotos(data);
//                 setLoading(false);
//             })
//             .catch((error) => {
//                 const userError = toUserError(error);
//                 setError(userError);
//                 setLoading(false);
//             });
//     }, []);

//     if (error) {
//         return <div>{error}</div>;
//     } else if (loading) {
//         return <div>Loading...</div>;
//     } else {
//         return (
//             <ul>
//                 {photos.map((photo) => {
//                     return (
//                         <li key={photo.id}>
//                             <img src={photo.thumbnailUrl} alt={photo.title} />
//                             <h3>{photo.title}</h3>
//                         </li>
//                     );
//                 })}
//             </ul>
//         );
//     }
// }

// fetch(okUrl)
//     .then(response => {
//         console.log(response);
//         return response;
//     })
//     .then(handleErrors)
//     .then(response => response.json())
//     .then(data => console.log(data))
//     .catch(error => console.log(error));

// function handleErrors(response: Response) {
//     if (!response.ok) throw new Error(response.statusText);
//     return response;
// }
